version: 2.1

jobs:
  build:
    docker:
      - image: circleci/golang:1.12
    parallelism: 2

    environment:
      TEST_RESULTS: /tmp/test-results

    steps:
      - checkout
      - run: mkdir -p $TEST_RESULTS

      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}

      - run:
          name: Run unit tests
          command: echo TESTED

      - run: make

      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

      - run:
          name: Start service
          command: ./workdir/pingapp
          background: true

      - run:
          name: Validate service is working
          command: |
            sleep 5
            curl --retry 10 --retry-delay 1 -X GET http://localhost:8080/ping

      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output

      - store_test_results:
          path: /tmp/test-results


orbs:
  aws-ecr: circleci/aws-ecr@6.9.0
  aws-ecs: circleci/aws-ecs@1.2.0

workflows:
  version: 2
  build-workflow:
    jobs:
      - build
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          create-repo: true
          dockerfile: Dockerfile
          region: AWS_DEFAULT_REGION
          repo: 'fiicicd'
          tag: '${CIRCLE_SHA1}'
      - aws-ecs/deploy-service-update:
          requires:
            - aws-ecr/build-and-push-image
          aws-region: AWS_DEFAULT_REGION
          family: 'fiicicd-service'
          cluster-name: '$fiicicd-cluster'
          container-image-name-updates: 'container=fiicicd-service,tag=${CIRCLE_SHA1}'