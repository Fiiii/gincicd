version: 2.1
jobs:
  build:
    docker:
      - image: circleci/golang:1.12
#      - image: circleci/postgres:9.6-alpine
#        environment:
#          POSTGRES_USER: circleci-demo-go
#          POSTGRES_DB: circle_test

    parallelism: 2

    environment:
      TEST_RESULTS: /tmp/test-results

    steps:
      - checkout # check out source code to working directory
      - run: mkdir -p $TEST_RESULTS

      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}

#      - run:
#          name: Waiting for Postgres to be ready
#          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Run unit tests
#          environment: # environment variables for the database url and path to migration files
#            CONTACTS_DB_URL: "postgres://circleci-demo-go@localhost:5432/circle_test?sslmode=disable"
#            CONTACTS_DB_MIGRATIONS: /home/circleci/project/db/migrations

          # store the results of our tests in the $TEST_RESULTS directory
#          command: |
#            PACKAGE_NAMES=$(go list ./... | circleci tests split --split-by=timings --timings-type=classname)
#            gotestsum --junitfile ${TEST_RESULTS}/gotestsum-report.xml -- $PACKAGE_NAMES
          command: echo TESTED
      - run: make # pull and build dependencies for the project

      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

      - run:
          name: Start service
#          environment:
#            CONTACTS_DB_URL: "postgres://circleci-demo-go@localhost:5432/circle_test?sslmode=disable"
#            CONTACTS_DB_MIGRATIONS: /home/circleci/project/db/migrations
          command: ./workdir/pingapp
          background: true # keep service running and proceed to next step

      - run:
          name: Validate service is working
          command: |
            sleep 5
            curl --retry 10 --retry-delay 1 -X GET http://localhost:8080/ping

      - store_artifacts: # upload test summary for display in Artifacts
          path: /tmp/test-results
          destination: raw-test-output

      - store_test_results: # upload test results for display in Test Summary
          path: /tmp/test-results

workflows:
  version: 2
  build-workflow:
    jobs:
      - build